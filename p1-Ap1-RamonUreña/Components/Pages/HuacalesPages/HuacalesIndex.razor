@page "/Huacales/Index"

@inject HuacalesServices huacalesServices
@inject NavigationManager navigationManager

@rendermode InteractiveServer

<PageTitle>Registro de Huacales</PageTitle>
<div class="container">
	<div class="card shadow-lg">
		<div class="card-header">
			<label class="form-label"><strong>Registro de Entradas de Huacales</strong></label>
		</div>

		<div class="card-body">
			<div class="row">
				<label class="form-label col-2"><strong>Filtrar:</strong></label>
				<label class="form-label col-3"><strong>Buscar</strong></label>
			</div>
			<div class="row mt-1">
				<div class="col-2">
					<InputSelect class="form-select col-2" @bind-Value="Filtro">
						<option value="" selected disabled>-Seleccione una Opcion</option>
						<option value="Nombre">Nombre</option>
						
						
					</InputSelect>
				</div>
				<div class="col-3">
					<input class="form-control col-3" @bind = "ValorFiltro" placeholder="Escribe algo Profe" />

				</div>
				<div class="col-1">
					<button type="button" class="btn btn-outline-primary" @onclick="Buscar">Buscar</button>
					
				</div>
				<div class="col-1"><a href="/Huacales/Creates" class="btn btn-outline-success">Crear</a></div>
				
			</div>

			<div class="table table-striped">

				<table class="table">
					<thead>
						<tr>
							<th>Id</th>
							<th>Cliente</th>
							<th>Cantidad</th>
							<th>Precio</th>
							<th>Fecha</th>
							<th>Acciones</th>
						</tr>
					</thead>

					<tbody>
						@foreach(var h in ListaHuacales)
						{
							<tr>
								<th>@h.IdEntrada</th>
								<th>@h.NombreCliente</th>
								<th>@h.Cantidad</th>
								<th>@h.Precio</th>
								<th>@h.Fecha</th>
								<th>
									<a href="/Huacales/Edits/@h.IdEntrada" class="btn btn-outline-primary">Editar</a>
								</th>
							</tr>
						}
					</tbody>
				</table>

			</div>
		</div>
		<footer class="card-footer">
			<div class="row">
				<label class="form-label">Total de Entradas @ListaHuacales.Count()</label>

			</div>
		</footer>
	</div>
</div>


@code {

	public List<EntradasHuacales> ListaHuacales { get; set; } = new List<EntradasHuacales>();

	public string Filtro { get; set; }
	public string ValorFiltro { get; set; }

	protected override async Task OnInitializedAsync()
	{
		ListaHuacales = await huacalesServices.Listar(criterio: h => h.IdEntrada > 0);
	}

	public async Task Buscar()
	{
		ValorFiltro.Trim().ToLower();

		if(ValorFiltro != string.Empty)
		{
			if(Filtro == "Nombre")
			{
				ListaHuacales = await huacalesServices.Listar(criterio: H => H.NombreCliente.Trim().ToLower().Contains(ValorFiltro));
			}
			
		}
		else
		{
			ListaHuacales = await huacalesServices.Listar(criterio: h => h.IdEntrada > 0);
		}

		
	}
}
